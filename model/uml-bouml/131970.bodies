class PreviewTiles
!!!151298.java!!!	PreviewTiles(inout tileGenerator : TileLoaderAndFactory)
        /**
         * Memorizzo il generatore di Tiles
         */
        this.tileGen = tileGenerator;
        /**
         * inizializzo il generatore di numeri casuali
         */
        r = new Random();
        posizione = new Point(Board.BOARD_BASEX + (Board.COLONNE*Board.TILE_SIZEX)+30,Board.BOARD_BASEY);
!!!151426.java!!!	draw(inout g : Graphics2D) : void
        for(int i=0;i<NUMTILES;i++){
            tiles.get(i).draw(g, posizione.x, posizione.y +(i*Board.TILE_SIZEY) + (i*SPACE) + 100, false,0);
        }
!!!151554.java!!!	generateRandomTile() : Tile

        //genero un tipo di tile da 0 a 9
        int randomPossibleTile = r.nextInt(TileLoaderAndFactory.NUMERO_TIPI_TILE_PREVIEW);

        //controllo che il tile sia possibile a questo livello
        while (tileNonPossibiliLivelloCorrente.contains(randomPossibleTile)) {
            randomPossibleTile = r.nextInt(TileLoaderAndFactory.NUMERO_TIPI_TILE_PREVIEW);
        }

        //ritorno un clone del tile
        return tileGen.getTile(randomPossibleTile);
!!!151682.java!!!	getNextTile() : Tile
        //genera un nuovo Tile Random
        tiles.addLast(generateRandomTile());
        //recupera il Tile da ritornare
        return tiles.removeFirst();
!!!151810.java!!!	initForStartingLevel(in level : int) : void
        if (level >= 1 & level <= 10) {
            tileNonPossibiliLivelloCorrente = new Vector();
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.EMPTY_TILE);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_DESTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SINISTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SOPRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SOTTO);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_DESTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SINISTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SOPRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SOTTO);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.WALL_TILE);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.DOPPIACURVA_SINISTRASOPRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.DOPPIACURVA_SINISTRASOTTO);

            // Genero le Tile del preview
            tiles = new LinkedList<Tile>();
            for (int i = 0; i < NUMTILES; i++) {
                tiles.addLast(generateRandomTile());
            }
        } else if (level >= 11 & level <= 30) {
            tileNonPossibiliLivelloCorrente = new Vector();
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.EMPTY_TILE);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_DESTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SINISTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SOPRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.START_TILE_SOTTO);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_DESTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SINISTRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SOPRA);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.END_TILE_SOTTO);
            tileNonPossibiliLivelloCorrente.add(TileLoaderAndFactory.WALL_TILE);

            // Genero le Tile del preview
            tiles = new LinkedList<Tile>();
            for (int i = 0; i < NUMTILES; i++) {
                tiles.addLast(generateRandomTile());
            }

        } else {
            throw new LevelNotImplementedException(level);
        }
!!!151938.java!!!	drawNextTile(inout g : Graphics2D, in x : int, in y : int) : void
        tiles.get(0).draw(g, x, y, false,0);
