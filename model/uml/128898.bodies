class MidiPlayer
!!!146946.java!!!	isMusicEnable() : boolean

        return enabled;
!!!147074.java!!!	setEnable(inout v : boolean) : void

        enabled = v;
!!!147202.java!!!	MidiPlayer()

        enabled = true;
        try {
            sequencer = MidiSystem.getSequencer();
            sequencer.open();
            sequencer.addMetaEventListener(this);
        }
        catch ( MidiUnavailableException ex) {
            sequencer = null;
        }
!!!147330.java!!!	getSequence(in filename : String) : Sequence

        try {
            return getSequence(new FileInputStream(filename));
        }
        catch (IOException ex) {
            ex.printStackTrace();
            return null;
        }
!!!147458.java!!!	getSequence(inout is : InputStream) : Sequence

        try {
            if (!is.markSupported()) {
                is = new BufferedInputStream(is);
            }
            Sequence s = MidiSystem.getSequence(is);
            is.close();
            return s;
        }
        catch (InvalidMidiDataException ex) {
            ex.printStackTrace();
            return null;
        }
        catch (IOException ex) {
            ex.printStackTrace();
            return null;
        }
!!!147586.java!!!	play(inout sequence : Sequence, inout loop : boolean) : void

        if (sequencer != null && sequence != null && sequencer.isOpen()) {
            if (isMusicEnable()) {
                try {
                    sequencer.setSequence(sequence);
                    sequencer.start();
                    this.loop = loop;
                } catch (InvalidMidiDataException ex) {
                    ex.printStackTrace();
                }
            }
        }
!!!147714.java!!!	meta(inout event : MetaMessage) : void

        if (event.getType() == END_OF_TRACK_MESSAGE) {
            if (sequencer != null && sequencer.isOpen() && loop) {
                sequencer.setTickPosition(0);
                sequencer.start();
            }
        }
!!!147842.java!!!	stop() : void

         if (sequencer != null && sequencer.isOpen()) {
             sequencer.stop();
             sequencer.setMicrosecondPosition(0);
         }
!!!147970.java!!!	close() : void

         if (sequencer != null && sequencer.isOpen()) {
             sequencer.close();
         }
!!!148098.java!!!	getSequencer() : Sequencer

        return sequencer;
!!!148226.java!!!	setPaused(inout paused : boolean) : void

        if (this.paused != paused && sequencer != null && sequencer.isOpen()) {
            this.paused = paused;
            if (paused) {
                sequencer.stop();
            }
            else {
                sequencer.start();
            }
        }
!!!148354.java!!!	isPaused() : boolean

        return paused;
